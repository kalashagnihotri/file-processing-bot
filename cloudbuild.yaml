# Google Cloud Build configuration for automated deployment
# This file defines the CI/CD pipeline for Google Cloud Run deployment

steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '--tag=gcr.io/$PROJECT_ID/telegram-file-converter:$SHORT_SHA'
      - '--tag=gcr.io/$PROJECT_ID/telegram-file-converter:latest'
      - '.'
    id: 'build-image'

  # Step 2: Push Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/telegram-file-converter:$SHORT_SHA'
    id: 'push-image-sha'
    waitFor: ['build-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/telegram-file-converter:latest'
    id: 'push-image-latest'
    waitFor: ['build-image']

  # Step 3: Deploy to Cloud Run with enhanced resource allocation
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'telegram-file-converter'
      - '--image=gcr.io/$PROJECT_ID/telegram-file-converter:$SHORT_SHA'
      - '--region=asia-south1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--port=8080'
      - '--timeout=600'
      - '--cpu-boost'
      - '--startup-cpu-boost'
      - '--max-startup-time=600s'
      - '--set-env-vars=ENVIRONMENT=production,PYTHONUNBUFFERED=1'
      - '--set-secrets=BOT_TOKEN=telegram-bot-token:latest'
    id: 'deploy-cloud-run'
    waitFor: ['push-image-sha']

  # Step 4: Get service URL and set webhook
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get the service URL
        SERVICE_URL=$(gcloud run services describe telegram-file-converter \
          --region=asia-south1 \
          --format="value(status.url)")
        
        echo "Service deployed at: $SERVICE_URL"
        
        # Set the Telegram webhook
        BOT_TOKEN=$(gcloud secrets versions access latest --secret="telegram-bot-token")
        
        curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/setWebhook" \
          -d "url=$SERVICE_URL/webhook" \
          -d "drop_pending_updates=true"
        
        echo "Webhook set to: $SERVICE_URL/webhook"
        
        # Test the deployment
        curl -f "$SERVICE_URL/health" && echo "âœ… Health check passed"
    id: 'set-webhook'
    waitFor: ['deploy-cloud-run']

# Build configuration
options:
  # Use high-performance machine for faster builds
  machineType: 'E2_HIGHCPU_8'
  
  # Enable Docker layer caching for faster subsequent builds
  env:
    - 'DOCKER_BUILDKIT=1'

# Build timeout (15 minutes)
timeout: '900s'

# Substitutions for dynamic values
substitutions:
  _REGION: 'asia-south1'
  _SERVICE_NAME: 'telegram-file-converter'

# Tags for build identification
tags:
  - 'telegram-bot'
  - 'cloud-run'
  - 'production'